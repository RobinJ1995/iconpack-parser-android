apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultPublishConfig "release"

}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:25.3.1'
//    javadocDeps 'com.android.support:support-annotations:25.3.1'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'

}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


install {
    repositories.mavenInstaller {
        pom.project {
            name 'IconPackParser'
            description 'Parse Android icon packs'
            url 'https://github.com/RobinJ1995/iconpack-parser-android'
            inceptionYear '2018'

            packaging 'aar'
            groupId 'be.robinj.android'
            artifactId 'iconpack'
            version '0.1.0'

            licenses {
                license {
                    name 'Apache 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'
                }
            }
            developers {
                developer {
                    id = 'RobinJ1995'
                    name 'Robin Jacobs'
                }
            }
        }
    }
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "developer-id"
            name "developer-name"
            email "dev@d.com"
        }
    }

    scm {
        url "https://github.com/RobinJ1995/iconpack-parser-android"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
//            from android.sourceSets.main.java.srcDirs
            artifact sourcesJar
            artifact javadocJar
            groupId 'be.robinj.android'
            artifactId 'iconpack'
            version '0.1.0'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Your description of the lib')
                root.appendNode('name', 'Your name of the lib')
                root.appendNode('url', 'https://site_for_lib.tld')
                root.children().last() + pomConfig
            }
        }
    }
}